from collections import deque
import string

class DonutMaze:
    def __init__(self, maze_input):
        self.grid = [list(line) for line in maze_input.splitlines() if line]
        self.portals = self.find_portals()

    def find_portals(self):
        # Find all the portal locations and build a mapping from portal name to coordinates.
        portals = {}
        width, height = len(self.grid[0]), len(self.grid)
        
        def add_portal(name, x, y):
            if name not in portals:
                portals[name] = []
            portals[name].append((x, y))

        for y in range(height - 1):
            for x in range(width - 1):
                # Identify the letters for the labels of portals
                if self.grid[y][x] in string.ascii_uppercase:
                    if x + 1 < width and self.grid[y][x + 1] in string.ascii_uppercase:
                        # Horizontal portal label
                        label = self.grid[y][x] + self.grid[y][x + 1]
                        if x > 0 and self.grid[y][x - 1] == '.':
                            add_portal(label, x - 1, y)
                        elif x + 2 < width and self.grid[y][x + 2] == '.':
                            add_portal(label, x + 2, y)
                    if y + 1 < height and self.grid[y + 1][x] in string.ascii_uppercase:
                        # Vertical portal label
                        label = self.grid[y][x] + self.grid[y + 1][x]
                        if y > 0 and self.grid[y - 1][x] == '.':
                            add_portal(label, x, y - 1)
                        elif y + 2 < height and self.grid[y + 2][x] == '.':
                            add_portal(label, x, y + 2)
        
        # Include portals with single entry (such as 'AA' and 'ZZ')
        portals = {name: locs for name, locs in portals.items() if len(locs) >= 1}
        return portals
    
    def bfs(self, start, end):
        queue = deque([(start, 0)])
        visited = set([start])
        
        while queue:
            (x, y), steps = queue.popleft()
            
            # Check if we've reached the destination
            if (x, y) == end:
                return steps
            
            # Add neighboring positions
            for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
                nx, ny = x + dx, y + dy
                if 0 <= nx < len(self.grid[0]) and 0 <= ny < len(self.grid):
                    if (nx, ny) not in visited and self.grid[ny][nx] == '.':
                        visited.add((nx, ny))
                        queue.append(((nx, ny), steps + 1))
            
            # Check for portals
            if (x, y) in [loc for locs in self.portals.values() for loc in locs]:
                for name, locs in self.portals.items():
                    if (x, y) in locs:
                        # Teleport to the other side of the portal if it exists
                        if len(locs) == 2:
                            other_side = locs[1] if locs[0] == (x, y) else locs[0]
                            if other_side not in visited:
                                visited.add(other_side)
                                queue.append((other_side, steps + 1))
        
        return -1  # If no solution found

    def solve(self):
        if 'AA' not in self.portals or 'ZZ' not in self.portals:
            raise ValueError("Maze does not contain valid entry (AA) or exit (ZZ) portals.")
        start = self.portals['AA'][0]
        end = self.portals['ZZ'][0]
        return self.bfs(start, end)


# Example usage
maze_input = """
                                 T     P           U       U       Z   O                                     
                                 H     Z           A       U       W   K                                     
  ###############################.#####.###########.#######.#######.###.###################################  
  #.#.#.#.#.............#.#...#.#.....#...#.....#.....#.....#...#.....#...#...#...#.#.......#.....#.......#  
  #.#.#.#.#####.#.#####.#.###.#.#.###.###.#.#.#.#.#.#.#.###.###.#.###.#.###.###.###.#####.#####.###.#.#####  
  #...#.........#.#...........#...#...#.#...#.#.#.#.#.#.#.#.....#...#.#.#...........#.#.#.#.#.......#...#.#  
  ###.###.###.#########.###.###.#####.#.#.###.#####.#.#.#.#####.#.#.#.#.#.#######.###.#.#.#.###.#########.#  
  #...#.#.#.......#.#.....#.....#.......#.#.#.#.#...#.#.#.#.#...#.#.#.#.......#.....#...#.#.#.#.....#.....#  
  ###.#.#####.###.#.#########.#.#.###.###.#.#.#.#####.#.#.#.#######.#.#.#.#############.#.#.#.#.###.#####.#  
  #.....#.....#.#.#...........#.#.#...#.#.#.......#...#.......#...#.#.#.#.#...#.#.#.#.#.........#.#...#...#  
  #.###.#####.#.#######.#####.#######.#.#####.#####.###.#.#.#####.###.#.###.###.#.#.#.#.#########.#####.###  
  #.#.#.#...#.#.....#.#.#.#...#...#.......#.#...#.....#.#.#.....#.....#.............................#.....#  
  ###.#.#.#####.#####.###.###.#.###.#.#.###.#.#####.#.###.#.#.#.#####.###.#######.###.###.#.###.#.###.#####  
  #.........#.#...#.#.......#.#...#.#.#.#.....#.....#.#...#.#.#.#...#.#...#.#...#.#.#.#...#...#.#.#.....#.#  
  #####.#####.#.###.#####.#.###.#.###.###.###.#.###.###.#####.#####.#.#.#.#.#.#####.#####.###########.###.#  
  #.#.#...#.#.....#...#...#.....#.#.....#.#...#...#...#.#.#.#.#...#.#.#.#...#.#.......#...........#.#.#.#.#  
  #.#.#.###.#.#####.###.#########.#.#.#######.###.#.#####.#.#.#.#.###.#.#####.#.#.#.#####.#.#.#.###.#.#.#.#  
  #.....#.....#.#.#...#.#...#.....#.#...#.....#...#...#...#.#.#.#.#...#.#.......#.#.#...#.#.#.#.#...#.....#  
  ###.###.#.#.#.#.#.#######.#####.###.#####.###.#.#######.#.#.#.#.#.#.#.#.###.#######.#########.#.#####.###  
  #...#.#.#.#.#.#...#...#.....#...#.....#.#...#.#.#.#.......#.#.#.#.#.#...#.#...#...#.#.....#...#.....#.#.#  
  ###.#.#####.#.###.#.#######.###.###.###.###.#.###.###.#.###.#.#.#.###.###.#.###.#.#.#.#########.#.###.#.#  
  #.....#.#.......#.#...#.....#.#.......#...#.#.....#.#.#.....#.#.#...#.#.........#.....#.#...#.#.#.....#.#  
  ###.#.#.###.#####.#.#####.#.#.#.#.#.###.#.#.#.#####.#.#.###.#.#.###.#.###.#############.#.###.###.#.#.#.#  
  #.#.#.#.#.......#.#.#...#.#...#.#.#.#.#.#.#.#.......#.#.#...#.#...#.#.#...#...#.....#.....#.#...#.#.#.#.#  
  #.#.###.#####.###.#.###.#####.#.#####.#.###.#####.#.#.#######.###.#.###.###.###.#########.#.#.#.#####.#.#  
  #.......#...#...#...#.#.........#...........#.....#.#.......#...#.....#.........#...#.....#.#.#...#.#...#  
  ###.#.###.###.#.###.#.#######.#######.#######.#############.###.###########.#######.###.#.#.###.###.#.###  
  #.#.#...#...#.#.....#...#    Y       R       R             U   X           L    #.....#.#.#.#...#.#...#.#  
  #.#####.#.#######.#####.#    O       F       U             A   Z           Q    #.#.#####.#.###.#.###.#.#  
  #.#.#.#...#...#.....#.#.#                                                       #.#.#.........#...#.....#  
  #.#.#.###.#.#####.#.#.#.#                                                       ###.#.#.#.#.###.#####.###  
RF........#...#.#.#.#......TH                                                     #.#.#.#.#.#.....#.......#  
  #.#######.###.#.#####.###                                                       #.#.#######.###.###.#.###  
BN......#...#.#.#.#.#......ER                                                   BH........#.#.#...#...#.#.#  
  #.#.#####.#.#.#.#.#.###.#                                                       #####.###.#.#######.###.#  
  #.#.#.#...........#.#...#                                                       #.....#.#.#.#.#...#.....#  
  #.###.#.#####.###.###.###                                                       ###.###.#.#.#.###.#.#####  
  #.......#.#.#.#.......#.#                                                       #...#.#.#.#...#.......#..LP
  #######.#.#.#######.###.#                                                       ###.###.#.#.#####.#.###.#  
ON..#.#.#.#.......#.#.#...#                                                       #.#...............#.....#  
  #.#.#.#.###.###.#.#####.#                                                       #.#######################  
  #.#...#.#.....#.........#                                                       #.......................#  
  #.#.#.#####.###.###.###.#                                                       #.#####.#.#.#.#.#####.###  
  #.#.#.....#...#...#.#....CU                                                     #...#...#.#.#.#.#.#...#..CU
  #.#.#.###.#.###.#######.#                                                       #.#####.#.#######.#.###.#  
  #...#.#.....#.#.#...#...#                                                       #.#...#.#.....#.#...#...#  
  ###.#########.#####.#.#.#                                                       #.#.#######.#.#.###.###.#  
YO..#.#.#.#...#.....#.#.#.#                                                     BT..#.....#.#.#.#...#.....#  
  #.###.#.#.#.#.#.###.#####                                                       #.###.###.#######.#######  
  #.........#...#..........UK                                                     #.#.....#.............#..GR
  #.#.###.#.###.###########                                                       ###.#.#####.#########.#.#  
  #.#.#...#...#.#.....#...#                                                       #...#.......#.#...#.....#  
  ###.#########.#.#####.#.#                                                       #.###.#.#.#.#.#.#####.###  
ZH..#...#.#...#.#.#...#.#..GR                                                   OK....#.#.#.#.#.#.#.#...#.#  
  #.#####.###.###.#.#.#.###                                                       #############.#.#.#####.#  
  #.................#...#.#                                                       #.#...#...#.#............KP
  #######################.#                                                       #.#.###.#.#.#.#######.###  
  #.......................#                                                     RK..#.....#.........#.....#  
  ###.#####.#.#.#######.###                                                       #.#.#######.#######.#.###  
BT..#.#...#.#.#.#.....#.#..BN                                                     #.....#...#.#.#...#.#...#  
  #.#.#.#.#####.#.#.###.#.#                                                       #####.###.###.###.#######  
  #.#...#.#...#.#.#.....#.#                                                       #.#.#.#.............#...#  
  #.#####.#.#####.#######.#                                                       #.#.#.#.#.###.#.#######.#  
  #.......#.#.#.#.........#                                                     ON....#.#.#.#...#.#...#....LW
  #########.#.#.###########                                                       #.#####.#######.###.###.#  
  #...............#........ZW                                                     #.#.........#.........#.#  
  #.#.#.###.###.#.###.#####                                                       #.#####.#############.#.#  
UK..#.#.#.#.#...#.#...#...#                                                       #.........#...#.#.#.....#  
  #.#.###.#####.#.###.#.###                                                       #############.#.#.###.###  
  #.#.#.....#.#.#.#.......#                                                       #.............#...#...#.#  
  ###.#.###.#.###.#.#######                                                       #.###.#.#.###.#.#.#####.#  
  #.#.#.#.#...#.#.....#...#                                                       #...#.#.#...#...#.....#..IG
  #.#####.###.#.#######.###                                                       #.#.###.#####.#.#.###.#.#  
  #.......#.............#.#                                                       #.#.#.#.#.....#.#...#...#  
  ###.#.###.#.#.###.###.#.#                                                       #.###.#.#.#.#########.#.#  
LQ....#...#.#.#...#.#...#..UU                                                   PZ......#.#.#...#.......#.#  
  #.#######.###.#.#####.#.#                                                       #.###.#########.###.#####  
ZZ............#.#.#.#...#.#                                                       #.#.#.......#...#.....#.#  
  #.#.#.#.#.#######.###.#.#                                                       #.#.#.#####.#.#####.###.#  
  #.#.#.#.#.........#.....#                                                       #.#.....#...#.#.........#  
  #.#.###.#.#.###.#.#.#.#.#    L     K           Z     L     E       A       I    #.###.#####.#####.#.#.#.#  
  #.#...#.#.#.#...#.#.#.#.#    W     P           H     P     G       U       G    #.#.....#.#...#...#.#.#.#  
  #.#######.#####.#.#####.#####.#####.###########.#####.#####.#######.#######.###########.#.###.#.###.#.###  
  #.#.........#...#.#.......#.....#.#.....#.......#.......#...#.#...#.#.#.#...#.......#.#.#.#...#...#.#...#  
  #.###.###.###.#####.#######.###.#.#.###.#.###.###.###.###.###.#.#.#.#.#.###.#.###.###.#.#.###.###.###.###  
  #.#...#.....#.#.#.#.#.........#...#.#.#.#.#.#...#...#.#...#.....#.#...#.#.......#.#.........#.#...#.#...#  
  #.###.###.#####.#.###.#.#.#.#########.#.#.#.#####.###.###.###.###.#.###.###.###########.#.###.#####.#.###  
  #...#.#...#.......#.#.#.#.#.#.#.....#...#.......#...#.#.....#.#.....#...#...#.#...#.#...#...#.#.......#.#  
  #####.###.#####.#.#.#.###.#.#.#####.#.#.###.#####.#########.#.###.#.#.#.#.###.#.###.###.#.#.#.###.#.#.#.#  
  #.....#...#.#...#.....#...#.......#...#.#.......#.........#.#...#.#.#.#...#...#.#.....#.#.#.#...#.#.#...#  
  #.#.#.#.#.#.#.#####.#########.###.#.###.#.#######.###.#####.#.#####.#####.###.#.###.#.#.###.#.#######.###  
  #.#.#.#.#...#.#.....#.#.#.#.....#.#...#.#.#.#.#.#...#.#.....#.....#.#...#...........#.#.#.#.#.#...#.#...#  
  #.#######.#.#########.#.#.#.#.#########.#.#.#.#.#####.###.#.#.#########.#.#.###.###.#####.###.###.#.#.###  
  #.#.#.#...#...#.............#...#.#.....#.#.#...#.....#...#.#.....#.#.....#.#.#.#...#.#.#...#.#...#.#...#  
  #.#.#.###.#.#######.#.###.#.#####.#####.#.#.#.#####.#.###.###.###.#.###.#.###.#.#####.#.###.###.###.#####  
  #.#.....#.#.#.#.....#.#...#.....#...#...#.......#.#.#...#...#...#.#.#...#.....#.#...#.#.................#  
  #####.###.###.#####.###.#.###.###.#####.#####.#.#.#####.###.###.###.#######.#######.#.#.###.#.###.###.#.#  
  #.........#.........#...#.#.#.#.#.....#.#.....#...#.#.#.#...#.....#...........#.........#.#.#...#.#...#.#  
  #.#####.#.#.#####.###.###.#.#.#.#.#.###.#.#########.#.#.#.###.###.#####.###.#.#.#####.###.#.#######.###.#  
  #.#.#...#.#.#.#...#...#...#...#...#.....#.......#.......#.#.#.#...#.#...#.#.#...#.#.#.#...........#.#...#  
  ###.#.#######.#############.#####.#####.#.#####.#######.#.#.#.#####.###.#.###.###.#.#.###########.#.#.###  
  #...#...#.#.....#.......#.......#.#...#.#.#...#.#.#...#.#.#.....#...#...#...#...#...#...#...#...#.#.#...#  
  ###.#####.#####.#.#####.#.#####.#.#.#.###.#.#.#.#.###.#.#.#.#.###.###.###.#.#####.#######.###.#.###.###.#  
  #...#.................#.....#.#.#...#.#.#.#.#.#.#.......#.#.#.#.....#.....#...................#.#...#...#  
  #.#.###.###.###.#.#.#####.###.#.#.#.#.#.###.#.#.#.#######.###.###.#.#.#####.###.#########.#.#.###.#.###.#  
  #.#.....#...#...#.#...#.....#...#.#.#...#...#...#.......#...#.....#.#.#.......#.........#.#.#...#.#.#...#  
  #############################.#########.###.#########.#####.###.#######.###.#############################  
                               B         R   A         R     E   E       A   X                               
                               H         U   U         K     R   G       A   Z                               """

donut_maze = DonutMaze(maze_input)
try:
    steps = donut_maze.solve()
    print(f"Minimum steps to reach the exit: {steps}")
except ValueError as e:
    print(e)
